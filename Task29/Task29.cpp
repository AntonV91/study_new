// Задача 8.
// Написать функцию, определяющую количество положительных, 
// отрицательных и нулевых элементов передаваемого ей массива.

#include <iostream>
#include <iomanip>
// Подключаем библиотеку iomanip, чтобы воспользоваться
// функцией setw (используем для задания ширины поля 
// отображения для следующего элемента в потоке)

using namespace std;

void showArray(int ar[][8], const int row, int col)
{
	cout << "Добро пожаловать в программу для подсчета количества положительных, отрицательных и нулевых элементов массива!\n\n";
	cout << "Давайте взглянем на наш массив: \n\n";
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			cout << setw(3) << ar[i][j] << " \t ";
		}
		cout << endl;
	}
}
// Задаем невозвращаемую функцию, выводящую массив на экран;
// используем функцию setw (ориентируемся на минимальное 
// значение, в нашем случае красиво выводит при min = 3)

void initArray(int ar[][8], const int row, const int col)
{
	srand(time(NULL));
	// Задаем заполнение случайными числами (каждый запуск программы - разными)
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			ar[i][j] = rand() %  50 + (-25);
			// Задаем заполнение массива случайными числами от -25 до 25
		}
	}
}
// Задаем невозвращаемую функцию, инициализирующую массив: 
// размерность (описание аргумента функции должно содержать 
// количество столбцов [5]) и константы строк и столбцов

int posNumArray(int ar[][8], int row, int col)
{
	int posNum = 0;
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			if (ar[i][j] > 0)
			posNum++;
		}
	}
	cout << "\nКоличество положительных элементов массива = " << posNum << endl;
		return posNum;
}
// Задаем возвращаемую функцию, чтобы подсчитать 
// и вывести на экран количество положительных элементов массива

int negNumArray(int ar[][8], int row, int col)
{
	int negNum = 0;
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			if (ar[i][j] < 0)
				negNum++;
		}
	}
	cout << "\nКоличество отрицательных элементов массива = " << negNum << endl;
	return negNum;
}
// Задаем возвращаемую функцию, чтобы подсчитать 
// и вывести на экран количество отрицательных элементов массива

int zeroNumArray(int ar[][8], int row, int col)
{
	int zeroNum = 0;
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			if (ar[i][j] == 0)
				zeroNum++;
		}
	}
	cout << "\nКоличество нулевых элементов массива = " << zeroNum << endl << endl;
	return zeroNum;
}
// Задаем возвращаемую функцию, чтобы подсчитать 
// и вывести на экран количество нулевых элементов массива

int main()
{
	setlocale(LC_ALL, "Russian");
	const int row = 4, col = 8;
	// Задаем размерность массива по строкам и столбцам
	int ar[row][col];
	// Вводим переменную массива
	initArray(ar, row, col);
	// Вызываем функцию инициализации массива
	showArray(ar, row, col);
	// Вызываем функцию отображения массива на экране
	posNumArray(ar, row, col);
	// Вызываем функцию подсчета и вывода положительных чисел массива
	negNumArray(ar, row, col);
	// Вызываем функцию подсчета и вывода отрицательных чисел массива
	zeroNumArray(ar, row, col);
	// Вызываем функцию подсчета и вывода нулевых чисел массива

	system("pause");
	return 0;
}