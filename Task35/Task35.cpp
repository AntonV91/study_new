// Задача 2.
// Написать игру «Быки и коровы». 
// Программа "загадывает" четырёхзначное число и играющий должен угадать его.
// После ввода пользователем числа программа сообщает, сколько цифр числа угадано (коровы) 
// и сколько цифр угадано и стоит на нужном месте (быки).
// После отгадывания числа на экран необходимо вывести количество сделанных пользователем попыток.
// В программе необходимо использовать рекурсию.

// Примечание: в изначальном условии поменял быков и коров местами, т.к. в классической версии
// именно быки означают совпадение цифры и позиции, а коровы - только цифры. 
// Также добавил условие, что цифры в числе НЕ ПОВТОРЯЮТСЯ.

#include <iostream>
#include <windows.h> // Библиотека для подключения Sleep
#include <conio.h> // Библиотека для подключения getch

using namespace std;

// Прототипы функций, необходимых для решения задачи
bool diffNum(char ar[], const int size, int pos = -1); // Для проверки цифр на "разность" в "загаданном" числе
void showArray(char ar[], const int size); // Для вывода массива на экран
void fillArray(int val, char ar[], const int size); // Для передачи цифр в основной массив
void initArray(char ar[], const int size); // Для генерации СЧ и передачи его в массив

int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251); // Подключаем распознавание русского языка для ввода и вывода 
    const int size = 4;
    char hidNum[size]; // Переменная для массива с "загаданным" числом (тип char выбран, т.к.
    // у нас будет массив для генерации числа с 0 в начале)
    char userNum[size]; // Переменная для массива с пользовательской "догадкой"
    int atts = 0; // Переменная попыток

    srand(time(NULL));
    do // Цикл для генерации цифр массива с "загаданным" числом
    {
        initArray(hidNum, size);
    } while (!diffNum(hidNum, size)); // Выходим мз цикла, когда все 4 цифры разные

    string userName;

    // Выводим на экран приветствие, знакомимся с юзером и рассказываем ему правила игры
    cout << "\t\t\tДОБРО ПОЖАЛОВАТЬ В ИГРУ \"БЫКИ И КОРОВЫ\"" << endl;
    cout << "\t\t\t***************************************" << endl << endl;
    Sleep(1000);
    cout << "Как Вас зовут, незнакомец?" << endl << endl;
    Sleep(500);
    cout << "Введите имя: ";
    cin >> userName;
    Sleep(500);
    cout << endl;
    cout << "Приятно познакомиться, " << userName << "! Меня зовут Компьютер!" << endl << endl << endl;
    Sleep(1000);
    cout << "\t\t\tДАВАЙТЕ ОЗНАКОМИМСЯ С ПРАВИЛАМИ НАШЕЙ ИГРЫ" << endl;
    cout << "\t\t\t******************************************" << endl << endl;
    cout << "\tЯ загадаю для вас 4-значное число С НЕПОВТОРЯЮЩИМИСЯ ЦИФРАМИ, а Вашей целью будет отгадать его." << endl << endl;
    cout << "\tВы введете 4-значное число, затем я сообщу Вам в ответ, сколько цифр угадано" << endl;
    cout << "\tбез совпадения с их позициями в тайном числе (т.е. количество \"коров\")" << endl;
    cout << "\tи сколько угадано вплоть до позиции в загаданном числе (т.е.количество \"быков\")." << endl;
    cout << "\tКак только Вы введете число, совпадающее с тем, которое загадал компьютер, Вы победите." << endl << endl;
    cout << "\t\t\t\tУДАЧИ, " << userName << "!" << endl;
    cout << "\t\t(для продолжения нажмите любую клавишу)" << endl;
    _getch();
    system("cls");

    //showArray(hidNum, size); // Функция для вывода "загаданного" числа на экран
    //cout << endl; // Пригодится для проверки работы программы

    int entNum;	//число, введенное пользователем
    int bulls = 0;	// быки
    int cows = 0;	// коровы

    do // Цикл для проверки пользовательского ввода и подсчета результата
    {
        // Делаем так, чтобы юзер ввел число из нужного нам диапазона
        // (123 - наименьшее число с неповторяющимися цифрами, 9876 - наибольшее число
        // с неповторяющимися цифрами) 
        cout << "Введите число, состоящее из " << size << " РАЗНЫХ цифр (или 0 для выхода): ";
        cin >> entNum;
        Sleep(1000);
        if (entNum == 0) // Завершение программы
        {
            cout << "\nВы, верно, передумали или спешите, " << userName << "." << endl;
            cout << "Что ж... Очень жаль! До новых встреч!" << endl << endl;
            exit(0);
        }
        if (entNum > 9876 || entNum < 123) // Проверка пользовательского ввода
        {
            cout << "\nВы ввели недопустимое число! Попробуйте еще раз!" << endl;
            continue;
        }

        // Передаем введенное число в массив userNum[]
        fillArray(entNum, userNum, size);

        // Сообщаем юзеру, что он ввел число с одинаковыми цифрами
        if (!diffNum(userNum, size))
        {
            cout << "\nНельзя вводить одинаковые цифры! Введите число с РАЗНЫМИ ЦИФРАМИ!" << endl << endl;
            continue;
        }

        atts++; // Подсчитываем количество попыток, потребовавшихся для победы

        bulls = 0; // Переменная для "быков"
        cows = 0;  // Переменная для "коров"

        for (int i = 0; i < size; i++) // Цикл для определения и подсчета "быков" и "коров"
        {
            if (hidNum[i] == userNum[i])
                bulls++;
            for (int j = 0; j < size; j++)
                if (hidNum[i] == userNum[j])
                    cows++;
        }
        cows -= bulls;

        cout << "\nПопытка №" << atts << ": Быки = " << bulls << ", Коровы = " << cows << endl << endl;


    } while (bulls != 4); // Завершаем цикл, когда "быков" становится четыре

    if (bulls == 4) // Сообщаем юзеру о победе и количестве попыток
    {
        cout << "\nВы абсолютно правы! Поздравляю с победой, " << userName << "!" << endl << endl;
        cout << "Для победы Вам понадобилось " << atts << " попыток" << endl << endl;
    }

    system("pause");
    return 0;
}

// Функция для вывода массива на экран (понадобится для проверки)
void showArray(char ar[], int size)
{
    for (int i = 0; i < size; i++)
        cout << ar[i];
}

// Функция для передачи цифр из val в основной массив (ввели для того, чтобы
// число могло начинаться с нуля)
void fillArray(int val, char ar[], int size)
{
    for (int i = size - 1; i >= 0; i--)
    {
        ar[i] = '0' + val % 10;
        val = val / 10;
    }
}

// Функция для генерации случайного числа и записи его в массив
void initArray(char ar[], int size)
{
    fillArray(rand() % 9999, ar, size);
}

// Рекурсивная функция для проверки массива на наличие одинаковых цифр
bool diffNum(char ar[], int size, int pos)
{
    int count = 0;
    for (int i = 0; i < size; i++)
        count += pos == -1 ? !diffNum(ar, size, i) : pos != i ? ar[pos] == ar[i] : 0;
    return count == 0;
}
