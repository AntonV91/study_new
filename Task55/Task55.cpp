// Задача 1.
// Создать имитацию игры «Однорукий бандит». 
// Например, при нажатии кнопки «Enter» происходит «вращение» трех барабанов 
// (естественно, количество вращений каждого из них выбирается случайно), 
// на которых изображены разные значки; и если выпадает определенная комбинация, 
// то игрок получает какой-то выигрыш.

#include <iostream>
#include <queue> // Подключаем библиотеку для работы с очередями
#include <windows.h> // Для работы со Sleep

using namespace std;

struct Symbol // Определяем структуру Symbol
{
    string name; // Имя символа (Вишенка, Лимон, ... , Семерка)
    int payout; // Выплата за выпадение трех одинаковых символов
};

void title(); // Прототип "приветственной" функции
Symbol spinReel(queue<Symbol>& reel); // Прототип функции для вращения барабана
void initReel(queue<Symbol>& reel); // Прототип функции для инициализации барабана

int main()
{
    setlocale(LC_ALL, "Russian");
    srand(time(NULL));

    // Создаем барабаны №1-3 в виде очереди символов
    queue<Symbol> reel1;
    queue<Symbol> reel2;
    queue<Symbol> reel3;

    // Вызываем функцию инициализации барабанов №1-3
    initReel(reel1);
    initReel(reel2);
    initReel(reel3);

    int coins = 25; // Изначальное количество монет у игрока
    int bet; // Ставка игрока

    title();
    cout << endl;
    while (coins > 0) // Игра продолжается пока есть монеты (или пока не нажат ноль)
    {
        cout << "У Вас " << coins << " монет(ы). Введите ставку (или 0 для выхода): ";
        cin >> bet;
        cout << endl;

        if (bet == 0) // Выход из игры при отсутствии монет
        {
            cout << "Спасибо за игру! До новых встреч!" << endl;
            break;
        }

        if (bet > coins) // Если ставка больше, чем монет в наличии
        {
            cout << "Недостаточно монет для игры! Введите другую ставку!" << endl;
            continue;
        }

        coins -= bet; // Вычитаем ставку из количества монет

        // Вращаем барабаны №1-3
        Symbol symbol1 = spinReel(reel1);
        Symbol symbol2 = spinReel(reel2);
        Symbol symbol3 = spinReel(reel3);

        // Выводим на экран символы, выпавшие на барабанах №1-3 
        // (с задержкой для имитации реального автомата)
        Sleep(300);
        cout << "| " << symbol1.name << " | ";
        Sleep(300);
        cout << symbol2.name << " | ";
        Sleep(300);
        // Добавили в конце escape-последовательность, чтобы проигрывался звук
        cout << symbol3.name << " | \a" << endl;
        Sleep(300);

        // Если все три символа совпали, то...
        if (symbol1.name == symbol2.name && symbol2.name == symbol3.name)
        {
            int payout = symbol1.payout * bet; // Ставка умножается на "стоимость" символа
            coins += payout; // Добавляем выигрыш к оставшемуся количеству монет
            cout << "Вы выиграли! Выплата: " << payout << " монет\n" << endl;
        }
        // Если не выпало три одинаковых символа
        else
        {
            cout << "Вы проиграли!\n" << endl;
        }
    }
    // Выходим из игры, если у пользователя не осталось монет
    if (coins == 0)
    {
        cout << "У Вас не осталось монет! Игра окончена!\n" << endl;
    }
    return 0;
}

void title()
{
    cout << "Добро пожаловать в программу 'Однорукий бандит'! Давайте сыграем!" << endl;
}

Symbol spinReel(queue<Symbol>& reel) // Функция для вращения барабана
{
    int index = rand() % reel.size(); // Генерируем случайный индекс в пределах диапазона
    for (int i = 0; i < index; i++) // Перемещаем символы в барабане до выбранного индекса
    {
        Symbol temp = reel.front();  // Сохраняем первый символ во временную переменную
        reel.pop();  // Удаляем первый символ из барабана
        reel.push(temp);  // Добавляем сохраненный символ в конец барабана
    }
    Symbol result = reel.front();  // Получаем символ, стоящий на выбранном индексе
    reel.pop();  // Удаляем символ из барабана
    reel.push(result);  // Добавляем полученный символ в конец барабана
    return result;  // Возвращаем полученный символ
}

void initReel(queue<Symbol>& reel) // Функция для инициализации барабана символами
{
    // Т.к. у нас имеется сразу 6 вариантов символа на барабане, вероятность выпадения трех
    // одинаковых не столь высока. Для проверки того, как программа отработает при выигрыше 
    // можем просто закомментрировать 3-4 варианта
    reel.push({ "Вишенка", 5 });
    reel.push({ "Лимон", 10 });
    reel.push({ "Слива", 15 });
    reel.push({ "Колокол", 20 });
    reel.push({ "Виноград", 25 });
    reel.push({ "Семерка", 30 });
}