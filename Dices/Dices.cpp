// Задание. Написать игру "Кубики".
// Пользователь и компьютер по очереди бросают 2 кубика
// Побеждает тот, кто набрал больше очков в сумме по результатам 3 бросков.

#include <iostream>
#include <conio.h>
#include <windows.h>
// Подключаем дополнительно две библиотеки:
// <conio.h> - чтобы использовать _getch();
// <windows.h> - чтобы использовать Sleep ();

using namespace std;

void Throw(int Dices)
// Используем функцию Throw для отображения кубиков 
// (здесь нам необходим множественный условный оператор switch);
// тип void означаает, что функция не возвращает значение
{
    switch (Dices)
    {
    case 1:
        cout << "-----------" << endl;
        cout << "|         |" << endl;
        cout << "|         |" << endl;
        cout << "|    *    |" << endl;
        cout << "|         |" << endl;
        cout << "|         |" << endl;
        cout << "-----------" << endl;
        break;
    case 2:
        cout << "-----------" << endl;
        cout << "|         |" << endl;
        cout << "|  *      |" << endl;
        cout << "|         |" << endl;
        cout << "|      *  |" << endl;
        cout << "|         |" << endl;
        cout << "-----------" << endl;
        break;
    case 3:
        cout << "-----------" << endl;
        cout << "|         |" << endl;
        cout << "|  *      |" << endl;
        cout << "|    *    |" << endl;
        cout << "|      *  |" << endl;
        cout << "|         |" << endl;
        cout << "-----------" << endl;
        break;
    case 4:
        cout << "-----------" << endl;
        cout << "|         |" << endl;
        cout << "|  *   *  |" << endl;
        cout << "|         |" << endl;
        cout << "|  *   *  |" << endl;
        cout << "|         |" << endl;
        cout << "-----------" << endl;
        break;
    case 5:
        cout << "-----------" << endl;
        cout << "|         |" << endl;
        cout << "|  *   *  |" << endl;
        cout << "|    *    |" << endl;
        cout << "|  *   *  |" << endl;
        cout << "|         |" << endl;
        cout << "-----------" << endl;
        break;
    case 6:
        cout << "-----------" << endl;
        cout << "|         |" << endl;
        cout << "|  *   *  |" << endl;
        cout << "|  *   *  |" << endl;
        cout << "|  *   *  |" << endl;
        cout << "|         |" << endl;
        cout << "-----------" << endl;
        break;
    }
    // 
}
int Summary()
{
    int Dice_1 = rand() % 5 + 1;
    Throw(Dice_1);
    int Dice_2 = rand() % 5 + 1;
    Throw(Dice_2);
    int Result = Dice_1 + Dice_2;
    cout << "Cумма на двух кубиках составляет: " << Result << " очков\n";
    // Выводим на экран суммарный результат 
    // выпавший на кубиках для каждого игрока
    return Result;
    // Возвращаем значение Result
}

int main()
{
    setlocale(LC_ALL, "Rus");
    srand(time(NULL));
    char Again;
    do
    {
        cout << "\t\t\t\t\tДОБРО ПОЖАЛОВАТЬ В КАЗИНО:" << endl << endl;

        cout << "\t\t\t************************************************\n";
        cout << "\t\t\t*                                         $    *\n";
        cout << "\t\t\t* VV    VV  EEEEEEE   GGGGG      A      SSSSS  *\n";
        cout << "\t\t\t* VV    VV  EE       G          A A    S  $    *\n";
        cout << "\t\t\t*  VV  VV   EEEEEEE  G   GG    A   A    SSSSS  *\n";
        cout << "\t\t\t*   VVVV    EE       G    G   AAAAAAA     $  S *\n";
        cout << "\t\t\t*    VV     EEEEEEE   GGGGG  A       A  SSSSS  *\n";
        cout << "\t\t\t*                                         $    *\n";
        cout << "\t\t\t************************************************\n\n";

        cout << "\t\t\t\t\t\t\t\t\t\tЧто наша жииииииииииииииииииииизнь?\n";
        cout << "\t\t\t\t\t\t\t\t\t\tИИИИИИИИИИГРААААААААААА!!!!!\n";
        cout << "\t\t\t\t\t\t\t\t\t\tДобро и зло – одни мечты!\n";
        cout << "\t\t\t\t\t\t\t\t\t\tТруд, честность – сказки для бабья.\n";
        cout << "\t\t\t\t\t\t\t\t\t\tКто прав, кто счастлив здесь, друзья!\n";
        cout << "\t\t\t\t\t\t\t\t\t\tСегодня ты, а завтра я!\n";
        cout << "\t\t\t\t\t\t\t\t\t\tТак бросьте же борьбу,\n";
        cout << "\t\t\t\t\t\t\t\t\t\tЛовите миг удачи!\n\n";
        cout << "\t\t\t\t\t\t\t\t\t\t\"Пиковая дама\" (П.И. Чайковский)\n\n";
        // Пытался добавить в игру звуки при помощи библиотеки <audiere.h>
        // и сопутствующих манипуляций с файлами и ссылками, но не получилось
        // (конфликт систем x86 и x64 и разрешения почему-то не сработали)

        string userName;
        // Вводим переменную имени пользователя
        cout << "\nПривет, незнакомец! Я хочу сыграть с тобой в одну игру...\n\n";
        cout << "Как тебя зовут?" << endl;
        cout << "Введите имя: ";
        // Выводим на экран "вывеску" нашего "казино" 
        // и ведем диалог с пользователем (просим ввести имя)
        cin >> userName;
        // Пользователь вводит имя (почему-то не работает кириллица)
        cout << "\nПриятно познакомиться, " << userName << "! " << "Меня зовут HAL9000. Давай сыграем в кубики!\n";
        cout << "\nНачнем игру! (нажми любую клавишу)\n\n";
        _getch();
        // Здесь и в дальнейшем используем _getch(), 
        // чтобы следующее действие совершалось по нажатию любой кнопки

        int userScore = 0;
        int pcScore = 0;
        // Задаем и инициализируем переменные результатов игрока и компьютера
        for (int i = 1; i <= 3; i++)
            // Задаем цикл для выброса кубиков в каждом кону (от 1го до 3го)
        {
            system("cls");
            // При помощи system ("cls") очищаем экран перед каждым коном
            // (тем самым избегаем нагромождений)
            cout << "\n\t\t" << i << "-й кон" << endl;
            // Выводим на экран номер кона (от 1го до 3го)
            cout << "\nБросайте кости, " << userName << "! (нажмите любую клавишу)\n";
            _getch();
            Sleep(500);
            // При помощи Sleep задаем паузу в 0.5 перед выводом результата
            // (имитируем паузу при реальном выбросе кубика)
            userScore += Summary();
            // Отражаем сумму бросков юзера за N количество конов
            cout << userName << " суммарно набрал: " << userScore << " очков\n\n";
            // Выводим на экран сумму бросков юзера за N конов 
            Sleep(1500);
            // Задаем паузу в 1.5 между выводом суммы
            // очков юзера и броском компьютера
            cout << "\nХод HAL9000!\n";
            Sleep(500);
            // При помощи Sleep задаем паузу в 0.5 перед выводом результата
            // (имитируем паузу при реальном выбросе кубика)
            pcScore += Summary();
            // Отражаем сумму бросков юзера за N количество конов
            cout << "HAL9000 суммарно набрал: " << pcScore << " очков\n\n";
            // Выводим на экран сумму бросков юзера за N конов 
            cout << "Идем дальше! (нажмите любую клавишу)" << endl;
            _getch();
        }

        system("cls");
        // Очищаем экран для вывода финального результата
        cout << "ДАВАЙТЕ УЗНАЕМ КТО ПОБЕДИЛ!\n\n";
        cout << "Ваш результат, " << userName << ": " << userScore << " очков" << endl << endl;
        cout << "Результат HAL9000: " << pcScore << " очков" << endl << endl;
        // На экран выводятся результаты юзера и компьютера (в очках)

        if (userScore > pcScore)
        {
            cout << userName << ", Вы победили! Поздравляю!\n";
        }
        if (userScore < pcScore)
        {
            cout << "HAL9000 победил! Не расстраивайтесь, " << userName << ", Вам в любви повезет!\n\n";
        }
        if (userScore == pcScore)
        {
            cout << "\nВы сыграли вничью!\n\n" << endl;
        }
        // Определяем победителя (либо ничью), 
        // исходя из количества набранных очков 

        cout << "\nСыграем еще раз, " << userName << " ? (y - да, n - нет)\n";
        // Спрашиваем юзера хочет ли он сыграть еще раз
        cin >> Again;
        // Пользователь вводит Y или N
        if (Again == 'n')
        {
            cout << "\nДо новых встреч в казино VEGA$, " << userName << "!" << " HAL9000 всегда к Вашим услугам!" << endl;
            break;
            // Если юзер ввел N, то цикл прерывается и мы с ним прощаемся
        }
    } while (Again == 'y');
    // Если юзер ввел N, то цикл возобновляется 
    // и мы возвращаемся на приветственный экран
    // (решил не возвращать сразу к броскам, 
    // чтобы юзер имел возможность сменить никнейм)

    return 0;

}