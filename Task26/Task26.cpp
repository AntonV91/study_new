#include <iostream>

using namespace std;

int main()
{
    setlocale(LC_ALL, "Russian");
    srand(time(NULL));
    // Задаем заполнение случайными числами (каждый запуск программы - разными)
    const int row1 = 5, col1 = 10;
    const int row2 = 5, col2 = 5;
    // Задаем размеры массивов: для первого - 5 строк, 10 столбцов,
    // для второго - 5 строк, 5 столбцов
    int ar1[row1][col1], ar2[row2][col2];
    // Объявляем массивы: первый и второй (с размерами)
    int x = 0;
    // Вводим переменную для счетчика (увеличения префикса) в цикле

    cout << "Исходный массив с данными:\n\n";
    
    for (int i = 0; i < row1; i++) 
    {
        for (int j = 0; j < col1; j++)
        // Создаем вложенный цикл для заполнения 
        // первого массива данными: сначала строки, затем столбцы
        {
            ar1[i][j] = rand() % 51 + 0;
            // Задаем заполнение массива случайными числами от 0 до 50
            x++;
            // Включаем наш счетчик для поэлементного заполнения массива
            cout << ar1[i][j] << "\t";
            // Выводим массив на экран и добавляем табуляцию 
            // для корректного отображения данных
        }
        cout << endl;
    }
    cout << endl;
    cout << "Массив, суммирующий данные элементов первого:\n\n";
    for (int i = 0; i < row2; i++)
    {
        for (int j = 0; j < col2; j++)
     // Создаем вложенный цикл для заполнения 
     // второго массива данными: сначала строки, затем столбцы
        {

            ar2[i][j] = ar1[i][j * 2] + ar1[i][j * 2 + 1];
        // Задаем поэлементное заполнение второго массива 
        // (суммой элементов из первого массива): 
        // не изменяя индекс строки (т.к. мы работаем в рамках одной строки),
        // умножаем на 2 индекс столбца для первого суммируемого элемента, 
        // и умножаем на 2 индекс второго суммируемого элемента
        // и затем прибавляем к нему единицу
        //(ar2[0][0] = ar1[0][0] + ar1[0][1] и т.д.)
         cout << ar2[i][j] << "\t";
         
         // Выводим массив на экран и добавляем табуляцию 
         // для корректного отображения данных
        }
        cout << endl;
        }
    cout << endl << endl;
    system("pause");
    return 0;
}