// Задача 5.
// В двумерном массиве целых чисел посчитать сумму элементов: 
// в каждой строке; 
// в каждом столбце; 
// одновременно по всем строкам и всем столбцам.

#include <iostream>
#include <iomanip>
// Подключаем библиотеку iomanip, чтобы воспользоваться
// функцией setw (используем для задания ширины поля 
// отображения для следующего элемента в потоке)
using namespace std;

int main()
{
    setlocale(LC_ALL, "Russian");
    const int row = 6, col = 5;
    // Задаем размерность массива по строкам и столбцам
    int arr[row][col] = {};
    // Объявляем массив и инициализируем его через количество строк и столбцов
    int rowSum[row] = {};
    int colSum[col] = {};
    int tSum = 0;

    // Задаем переменные для суммы элементов строк, 
    // суммы элементов столбцов и суммы элементов 
    // по всем строкам и столбцам (инициализируем последнюю)

    cout << "Двумерный массив чисел от 10 до 100: \n\n";
    cout << "-----------------------------------------" << endl;
    srand(time(NULL));
    // Задаем заполнение случайными числами (каждый запуск программы - разными)
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
            // Создаем вложенный цикл для заполнения 
            // массива данными: сначала строки, затем столбцы
        {
            arr[i][j] = rand() % 90 + (10);
            // Задаем заполнение массива случайными числами от 0 до 50
            cout << setw(3) << arr[i][j] << "    ";
            // Выводим массив на экран с соответствующим значением setw
            // (ориентируемся на минимальное значение, 
            // в нашем случае красиво выводит при min = 3)
            rowSum[i] += arr[i][j];
            colSum[j] += arr[i][j];
            // Подсчитываем сумму элементов в строках и столбцах

        }
        cout << " | " << rowSum[i] << endl;
        // Выводим на экран сумму элементов в строках с отграничителем
    }
    cout << "==========================================" << endl;
    // Выводим на экран отграничитель между массивом и итого
    for (int j = 0; j < col; j++)
        // Задаем цикл для подсчета общей суммы (считаем через столбцы)
    {
        cout << setw(3) << colSum[j] << "    ";
        // Выводим на экран сумму по столбцам
        tSum += colSum[j];
        // Считаем общую сумму (через столбцы)
    }
    cout << " | " << tSum << endl << endl;
    // Выводим на экран общую сумму с отграничителем
    system("pause");
    return 0;
}
